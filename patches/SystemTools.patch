diff -ruN a/plugin/plugin.py b/plugin/plugin.py
--- a/plugin/plugin.py	2023-09-23 10:06:16.318232597 +0300
+++ b/plugin/plugin.py	2023-09-22 19:03:24.000000000 +0300
@@ -1,5 +1,4 @@
-from __future__ import absolute_import
-from __future__ import print_function
+
 # System Tools e2plugin
 # This Tools are made To have system tools Integrated into skin.
 # For prober skin integration, skin.xml needs to be adapted to have the screens fit into it.
@@ -27,6 +26,26 @@
 import os
 from enigma import eTimer, RT_HALIGN_LEFT, RT_HALIGN_RIGHT, gFont, gRGB, eListboxPythonMultiContent
 
+from Components.Language import language
+from Tools.Directories import resolveFilename, SCOPE_PLUGINS, SCOPE_LANGUAGE
+from os import environ as os_environ
+import gettext
+
+def localeInit():
+	lang = language.getLanguage()[:2] # getLanguage returns e.g. "fi_FI" for "language_country"
+	os_environ["LANGUAGE"] = lang # Enigma doesn't set this (or LC_ALL, LC_MESSAGES, LANG). gettext needs it!
+	gettext.bindtextdomain("SystemTools", resolveFilename(SCOPE_PLUGINS, "Extensions/SystemTools/locale"))
+
+def _(txt):
+	t = gettext.dgettext("SystemTools", txt)
+	if t == txt:
+		print("[SystemTools] fallback to default translation for", txt)
+		t = gettext.gettext(txt)
+	return t
+
+localeInit()
+language.addCallback(localeInit)
+
 ##############################################################################
 config.SystemTools = ConfigSubsection()
 config.SystemTools.mainmenu = ConfigYesNo(default=False)
@@ -53,17 +72,17 @@
 	</screen>"""
 
 	def __init__(self, session):
-		self.skin = SystemToolsConfig.skin			
+		self.skin = SystemToolsConfig.skin
 		Screen.__init__(self, session)
 		self.list = []
 
 		ConfigListScreen.__init__(self, self.list)
-		self.name = "SystemToolsConfig to activate some changes restart enigma"
+		self.name = _("SystemToolsConfig to activate some changes restart enigma")
 		self.onShown.append(self.setWindowTitle)
-	
+
 		self["key_red"] = Label(_("Cancel"))
 		self["key_green"] = Label(_("Save"))
-				
+
 		self["actions"] = ActionMap(["WizardActions", "ColorActions"],
 		{
 			"red": self.keyCancel,
@@ -111,46 +130,46 @@
 		Screen.__init__(self, session)
 		#self.ListEntry = []
 		self.list = []
-						
-		self.name = "System Tools Main Menu"
+
+		self.name = _("System Tools Main Menu")
 		self.onShown.append(self.setWindowTitle)
-			
+
 		self["key_red"] = Label(_("Cancel"))
 		self["key_green"] = Label(_("OK"))
 		self["key_yellow"] = Label(_("Configure"))
-		
+
 		self["actions"] = ActionMap(["OkCancelActions", "ColorActions"],
 		{
 			"ok": self.go,
 			"cancel": self.cancel,
-			"red": self.cancel,			
+			"red": self.cancel,
 			"green": self.go,
 			"yellow": self.KeyConfig,
 		}, -1)
 
-		self.list.append(("Restart active Softcam", "com_one"))
-		self.list.append(("Restart enigma2", "com_eight"))
-		self.list.append(("Ecm Info ", "com_two"))
-		self.list.append(("Clean Memory", "com_seven"))
-		self.list.append(("Delete Epg data CAUTION RESTARTS ENIGMA2 ", "com_six"))
-		self.list.append(("Menu Swap File Tools", "com_four"))
-		self.list.append(("Menu System Information Tools ", "com_five"))
+		self.list.append((_("Restart active Softcam"), "com_one"))
+		self.list.append((_("Restart enigma2"), "com_eight"))
+		self.list.append((_("Ecm Info "), "com_two"))
+		self.list.append((_("Clean Memory"), "com_seven"))
+		self.list.append((_("Delete Epg data CAUTION RESTARTS ENIGMA2 "), "com_six"))
+		self.list.append((_("Menu Swap File Tools"), "com_four"))
+		self.list.append((_("Menu System Information Tools "), "com_five"))
 		self.list.append((_("Exit"), "exit"))
-					
+
 		self["entries"] = MenuList(self.list)
-		
-						
+
+
 	def setWindowTitle(self):
 		self.setTitle(self.name)
 
 	def KeyConfig(self):
-		self.session.open(SystemToolsConfig) 
+		self.session.open(SystemToolsConfig)
+
 
-				
 	def go(self):
 		returnValue = self["entries"].l.getCurrentSelection()[1]
 		print("\n[SystemToolsSc] returnValue: " + returnValue + "\n")
-		
+
 		if returnValue is not None:
 			if returnValue == "com_one":
 				msg = _("Please wait, restarting softcam")
@@ -184,18 +203,18 @@
 	def prombt(self, com):
 		self.session.open(SystemToolsConsole, _("start shell com: %s") % (com), ["%s" % com])
 
-	def prombtbox(self, com):	
+	def prombtbox(self, com):
 		self.session.open(ConsoleBox, _("start shell com: %s") % (com), ["%s" % com])
 
 	def SoftcamRestart(self):
 		self.activityTimer.stop()
 		del self.activityTimer
 		os.system('sleep 2')
-		os.system('/etc/init.d/softcam stop')
+		os.system('/usr/local/bin/softcam stop')
 		self.oldref = self.session.nav.getCurrentlyPlayingServiceReference()
 		self.session.nav.stopService()
 		os.system('sleep 2')
-		os.system('/etc/init.d/softcam start')
+		os.system('/usr/local/bin/softcam start')
 		os.system('sleep 3')
 		if self.mbox:
 			self.mbox.close()
@@ -205,14 +224,14 @@
 
 	def EcmInfo(self):
 		if fileExists("/tmp/ecm.info"):
-			ecm = open ("/tmp/ecm.info")			
+			ecm = open ("/tmp/ecm.info")
 			msg = ecm.read()
 			ecm.close()
 			return msg
 		else:
-			msg = "Your Are watching FTA Channel or\n ecm.info file is missing."
+			msg = _("Your Are watching FTA Channel or\n ecm.info file is missing.")
 			return msg
-							
+
 	def info(self):
 		self.session.open(SystemToolsInf)
 
@@ -237,27 +256,27 @@
 		self.skin = SystemToolsInf.skin
 		Screen.__init__(self, session)
 		self.list = []
-		
-		self.name = "System Tools Information Menu"
+
+		self.name = _("System Tools Information Menu")
 		self.onShown.append(self.setWindowTitle)
 		self["key_red"] = Label(_("Cancel"))
 		self["key_green"] = Label(_("OK"))
-				
+
 		self["actions"] = ActionMap(["OkCancelActions", "ColorActions"],
 		{
 			"ok": self.go,
 			"cancel": self.cancel,
-			"red": self.cancel,			
+			"red": self.cancel,
 			"green": self.go,
 		}, -1)
-		
-		self.list.append(("  Memory info simple", "com_infone"))
-		self.list.append(("  Memory info list", "com_infseven"))
-		self.list.append(("  Smartreader Info", "com_inftwo"))
-		self.list.append(("  Mounted devices", "com_inftree"))
-		self.list.append(("  Storage devices Info", "com_inffour"))
-		self.list.append(("  Cpu Information", "com_inffive"))
-		self.list.append(("  Linux and gcc version", "com_infsix"))
+
+		self.list.append((_("  Memory info simple"), "com_infone"))
+		self.list.append((_("  Memory info list"), "com_infseven"))
+		self.list.append((_("  Smartreader Info"), "com_inftwo"))
+		self.list.append((_("  Mounted devices"), "com_inftree"))
+		self.list.append((_("  Storage devices Info"), "com_inffour"))
+		self.list.append((_("  Cpu Information"), "com_inffive"))
+		self.list.append((_("  Linux and gcc version"), "com_infsix"))
 		self.list.append((_("  Exit"), "exit"))
 
 		self["entries"] = MenuList(self.list)
diff -ruN a/plugin/SystemToolsConsole.py b/plugin/SystemToolsConsole.py
--- a/plugin/SystemToolsConsole.py	2023-09-23 10:06:17.122243595 +0300
+++ b/plugin/SystemToolsConsole.py	2023-09-22 19:03:24.000000000 +0300
@@ -1,4 +1,3 @@
-from __future__ import print_function
 from enigma import eConsoleAppContainer
 from Screens.Screen import Screen
 from Components.ActionMap import ActionMap
@@ -43,7 +42,6 @@
 		self.setTitle(self.newtitle)
 
 	def startRun(self):
-		self["text"].setText(_("Execution Progress:") + "\n\n")
 		print("Console: executing in run", self.run, " the command:", self.cmdlist[self.run])
 		if self.container.execute(self.cmdlist[self.run]): #start of container application failed...
 			self.runFinished(-1) # so we must call runFinished manual
@@ -113,7 +111,6 @@
 		self.setTitle(self.newtitle)
 
 	def startRun(self):
-		self["text"].setText(_("Execution Progress:") + "\n\n")
 		print("Console: executing in run", self.run, " the command:", self.cmdlist[self.run])
 		if self.container.execute(self.cmdlist[self.run]): #start of container application failed...
 			self.runFinished(-1) # so we must call runFinished manual
diff -ruN a/po/ru.po b/po/ru.po
--- a/po/ru.po	1970-01-01 03:00:00.000000000 +0300
+++ b/po/ru.po	2023-09-23 12:33:58.870779561 +0300
@@ -0,0 +1,222 @@
+# SOME DESCRIPTIVE TITLE.
+# Copyright (C) YEAR THE PACKAGE'S COPYRIGHT HOLDER
+# This file is distributed under the same license as the PACKAGE package.
+# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
+#
+msgid ""
+msgstr ""
+"Project-Id-Version: SystemTools\n"
+"Report-Msgid-Bugs-To: \n"
+"POT-Creation-Date: 2023-09-23 11:55+0300\n"
+"PO-Revision-Date: 2023-09-23 12:19+0300\n"
+"Last-Translator: Alexandr Coltsov <a.g.prosat@gmail.com>\n"
+"Language-Team: ru_RU\n"
+"Language: ru\n"
+"MIME-Version: 1.0\n"
+"Content-Type: text/plain; charset=UTF-8\n"
+"Content-Transfer-Encoding: 8bit\n"
+"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n%10<=4 && (n%100<12 || n%100>14) ? 1 : 2);\n"
+"X-Generator: Poedit 3.2.2\n"
+"X-Poedit-SourceCharset: UTF-8\n"
+
+#: ../plugin.py:278
+msgid "  Cpu Information"
+msgstr "  Информация о процессоре"
+
+#: ../plugin.py:280 ../plugin.py:403
+msgid "  Exit"
+msgstr "  Выход"
+
+#: ../plugin.py:279
+msgid "  Linux and gcc version"
+msgstr "  Версия Linux и gcc"
+
+#: ../plugin.py:274
+msgid "  Memory info list"
+msgstr "  Список информации о памяти"
+
+#: ../plugin.py:273
+msgid "  Memory info simple"
+msgstr "  Краткая информация о памяти"
+
+#: ../plugin.py:276
+msgid "  Mounted devices"
+msgstr "  Смонтированные устройства"
+
+#: ../plugin.py:275
+msgid "  Smartreader Info"
+msgstr "  Информация Smartreader"
+
+#: ../plugin.py:277
+msgid "  Storage devices Info"
+msgstr "  Информация о носителях информации"
+
+#: ../plugin.py:83 ../plugin.py:137 ../plugin.py:262 ../plugin.py:384
+msgid "Cancel"
+msgstr "Отмена"
+
+#: ../plugin.py:153
+msgid "Clean Memory"
+msgstr "Очистка памяти"
+
+#: ../SystemToolsText.py:66 ../SystemToolsText.py:67
+msgid "Close"
+msgstr "Закрыть"
+
+#: ../plugin.py:139
+msgid "Configure"
+msgstr "Настройки"
+
+#: ../plugin.py:154
+msgid "Delete Epg data CAUTION RESTARTS ENIGMA2 "
+msgstr "Удаление данных EPG (ТРЕБУЕТСЯ ПЕРЕЗАПУСК ENIGMA2) "
+
+#: ../plugin.py:504
+msgid "Done! You can now activate the SWAP on CF"
+msgstr "Готово! Теперь Вы можете активировать файл подкачки на CF"
+
+#: ../plugin.py:524
+msgid "Done! You can now activate the SWAP on HDD"
+msgstr "Готово! Теперь Вы можете активировать файл подкачки на HDD"
+
+#: ../plugin.py:544
+msgid "Done! You can now activate the SWAP on USB"
+msgstr "Готово! Теперь Вы можете активировать файл подкачки на USB"
+
+#: ../plugin.py:152
+msgid "Ecm Info "
+msgstr "Информация ECM "
+
+#: ../SystemToolsConsole.py:56 ../SystemToolsConsole.py:125
+msgid "Execution finished!!"
+msgstr "Выполнение завершено!"
+
+#: ../SystemToolsText.py:26 ../plugin.py:157
+msgid "Exit"
+msgstr "Выход"
+
+#: ../plugin.py:155
+msgid "Menu Swap File Tools"
+msgstr "Меню инструментов файла подкачки"
+
+#: ../plugin.py:156
+msgid "Menu System Information Tools "
+msgstr "Меню информации системных инструментов "
+
+#: ../plugin.py:508
+msgid "No compact flash mounted on /media/cf"
+msgstr "Компактная флешка не смонтирована на /media/cf"
+
+#: ../plugin.py:528
+msgid "No hard drive mounted on /media/hdd"
+msgstr "Нет жесткого диска, смонтированного на /media/hdd"
+
+#: ../plugin.py:548
+msgid "No usb stick mounted on /media/usb"
+msgstr "USB флешка не смонтирована /media/usb"
+
+#: ../SystemToolsText.py:27 ../plugin.py:138 ../plugin.py:263 ../plugin.py:385
+msgid "OK"
+msgstr "OK"
+
+#: ../plugin.py:425
+msgid "Please wait : Creating swap File on cf"
+msgstr "Пожалуйста, подождите: Создание файла подкачки на cf"
+
+#: ../plugin.py:418
+msgid "Please wait : Creating swap File on hdd"
+msgstr "Пожалуйста, подождите: Создание файла подкачки на жестком диске"
+
+#: ../plugin.py:432
+msgid "Please wait : Creating swap File on usb"
+msgstr "Пожалуйста, подождите: Создание файла подкачки на USB"
+
+#: ../plugin.py:175
+msgid "Please wait, restarting softcam"
+msgstr "Пожалуйста, подождите: Перезапуск softcam"
+
+#: ../plugin.py:150
+msgid "Restart active Softcam"
+msgstr "Перезапуск активного эмулятора"
+
+#: ../plugin.py:151
+msgid "Restart enigma2"
+msgstr "Рестарт enigma2"
+
+#: ../plugin.py:84
+msgid "Save"
+msgstr "Сохранить"
+
+#: ../plugin.py:94
+msgid "Show SystemTools in Main menu"
+msgstr "Показ SystemTools в главном меню"
+
+#: ../plugin.py:97
+msgid "Show SystemTools in Plugin menu restart enigma to activate"
+msgstr "Показ SystemTools в меню плагинов (требуется рестарт)"
+
+#: ../plugin.py:96
+msgid "Show SystemTools in Setup menu"
+msgstr "Показ SystemTools в меню настроек"
+
+#: ../plugin.py:95
+msgid "Show SystemTools in System menu"
+msgstr "Показ SystemTools в системном меню"
+
+#: ../plugin.py:496
+msgid "Swap File was already created ! You can activate the SWAP on CF if not done yet"
+msgstr "Файл подкачки уже создан! Вы можете активировать SWAP на CF, если это еще не сделано"
+
+#: ../plugin.py:516
+msgid "Swap File was already created ! You can activate the SWAP on HDD if not done yet"
+msgstr "Файл подкачки уже создан! Вы можете активировать SWAP на HDD, если это еще не сделано"
+
+#: ../plugin.py:536
+msgid "Swap File was already created ! You can activate the SWAP on USB if not done yet"
+msgstr "Файл подкачки уже создан! Вы можете активировать SWAP на USB, если это еще не сделано"
+
+#: ../plugin.py:448
+msgid "Swap is De-activated"
+msgstr "Файл подкачки деактивирован"
+
+#: ../plugin.py:566
+msgid "Swap is activated on CF"
+msgstr "Файл подкачки активирован на CF"
+
+#: ../plugin.py:556
+msgid "Swap is activated on HDD"
+msgstr "Файл подкачки активирован на HDD"
+
+#: ../plugin.py:576
+msgid "Swap is activated on USB"
+msgstr "Файл подкачки активирован на USB"
+
+#: ../plugin.py:606 ../plugin.py:609 ../plugin.py:612
+msgid "System Tools"
+msgstr "Системные инструменты"
+
+#: ../plugin.py:260
+msgid "System Tools Information Menu"
+msgstr "Меню информации системных инструментов"
+
+#: ../plugin.py:134
+msgid "System Tools Main Menu"
+msgstr "Главное меню системных инструментов"
+
+#: ../plugin.py:80
+msgid "SystemToolsConfig to activate some changes restart enigma"
+msgstr "Инструменты системной конфигурации"
+
+#: ../plugin.py:232
+msgid ""
+"Your Are watching FTA Channel or\n"
+" ecm.info file is missing."
+msgstr ""
+"Вы смотрите FTA канал или\n"
+"ecm.info отсутствует."
+
+#: ../plugin.py:204 ../plugin.py:207 ../plugin.py:354 ../plugin.py:357
+#: ../plugin.py:583 ../plugin.py:586
+#, python-format
+msgid "start shell com: %s"
+msgstr ""
diff -ruN a/po/SystemTools.pot b/po/SystemTools.pot
--- a/po/SystemTools.pot	1970-01-01 03:00:00.000000000 +0300
+++ b/po/SystemTools.pot	2023-09-23 11:55:29.949481543 +0300
@@ -0,0 +1,218 @@
+# SOME DESCRIPTIVE TITLE.
+# Copyright (C) YEAR THE PACKAGE'S COPYRIGHT HOLDER
+# This file is distributed under the same license as the PACKAGE package.
+# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
+#
+#, fuzzy
+msgid ""
+msgstr ""
+"Project-Id-Version: PACKAGE VERSION\n"
+"Report-Msgid-Bugs-To: \n"
+"POT-Creation-Date: 2023-09-23 11:55+0300\n"
+"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
+"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
+"Language-Team: LANGUAGE <LL@li.org>\n"
+"Language: \n"
+"MIME-Version: 1.0\n"
+"Content-Type: text/plain; charset=UTF-8\n"
+"Content-Transfer-Encoding: 8bit\n"
+
+#: ../plugin.py:278
+msgid "  Cpu Information"
+msgstr ""
+
+#: ../plugin.py:280 ../plugin.py:403
+msgid "  Exit"
+msgstr ""
+
+#: ../plugin.py:279
+msgid "  Linux and gcc version"
+msgstr ""
+
+#: ../plugin.py:274
+msgid "  Memory info list"
+msgstr ""
+
+#: ../plugin.py:273
+msgid "  Memory info simple"
+msgstr ""
+
+#: ../plugin.py:276
+msgid "  Mounted devices"
+msgstr ""
+
+#: ../plugin.py:275
+msgid "  Smartreader Info"
+msgstr ""
+
+#: ../plugin.py:277
+msgid "  Storage devices Info"
+msgstr ""
+
+#: ../plugin.py:83 ../plugin.py:137 ../plugin.py:262 ../plugin.py:384
+msgid "Cancel"
+msgstr ""
+
+#: ../plugin.py:153
+msgid "Clean Memory"
+msgstr ""
+
+#: ../SystemToolsText.py:66 ../SystemToolsText.py:67
+msgid "Close"
+msgstr ""
+
+#: ../plugin.py:139
+msgid "Configure"
+msgstr ""
+
+#: ../plugin.py:154
+msgid "Delete Epg data CAUTION RESTARTS ENIGMA2 "
+msgstr ""
+
+#: ../plugin.py:504
+msgid "Done! You can now activate the SWAP on CF"
+msgstr ""
+
+#: ../plugin.py:524
+msgid "Done! You can now activate the SWAP on HDD"
+msgstr ""
+
+#: ../plugin.py:544
+msgid "Done! You can now activate the SWAP on USB"
+msgstr ""
+
+#: ../plugin.py:152
+msgid "Ecm Info "
+msgstr ""
+
+#: ../SystemToolsConsole.py:56 ../SystemToolsConsole.py:125
+msgid "Execution finished!!"
+msgstr ""
+
+#: ../SystemToolsText.py:26 ../plugin.py:157
+msgid "Exit"
+msgstr ""
+
+#: ../plugin.py:155
+msgid "Menu Swap File Tools"
+msgstr ""
+
+#: ../plugin.py:156
+msgid "Menu System Information Tools "
+msgstr ""
+
+#: ../plugin.py:508
+msgid "No compact flash mounted on /media/cf"
+msgstr ""
+
+#: ../plugin.py:528
+msgid "No hard drive mounted on /media/hdd"
+msgstr ""
+
+#: ../plugin.py:548
+msgid "No usb stick mounted on /media/usb"
+msgstr ""
+
+#: ../SystemToolsText.py:27 ../plugin.py:138 ../plugin.py:263 ../plugin.py:385
+msgid "OK"
+msgstr ""
+
+#: ../plugin.py:425
+msgid "Please wait : Creating swap File on cf"
+msgstr ""
+
+#: ../plugin.py:418
+msgid "Please wait : Creating swap File on hdd"
+msgstr ""
+
+#: ../plugin.py:432
+msgid "Please wait : Creating swap File on usb"
+msgstr ""
+
+#: ../plugin.py:175
+msgid "Please wait, restarting softcam"
+msgstr ""
+
+#: ../plugin.py:150
+msgid "Restart active Softcam"
+msgstr ""
+
+#: ../plugin.py:151
+msgid "Restart enigma2"
+msgstr ""
+
+#: ../plugin.py:84
+msgid "Save"
+msgstr ""
+
+#: ../plugin.py:94
+msgid "Show SystemTools in Main menu"
+msgstr ""
+
+#: ../plugin.py:97
+msgid "Show SystemTools in Plugin menu restart enigma to activate"
+msgstr ""
+
+#: ../plugin.py:96
+msgid "Show SystemTools in Setup menu"
+msgstr ""
+
+#: ../plugin.py:95
+msgid "Show SystemTools in System menu"
+msgstr ""
+
+#: ../plugin.py:496
+msgid "Swap File was already created ! You can activate the SWAP on CF if not done yet"
+msgstr ""
+
+#: ../plugin.py:516
+msgid "Swap File was already created ! You can activate the SWAP on HDD if not done yet"
+msgstr ""
+
+#: ../plugin.py:536
+msgid "Swap File was already created ! You can activate the SWAP on USB if not done yet"
+msgstr ""
+
+#: ../plugin.py:448
+msgid "Swap is De-activated"
+msgstr ""
+
+#: ../plugin.py:566
+msgid "Swap is activated on CF"
+msgstr ""
+
+#: ../plugin.py:556
+msgid "Swap is activated on HDD"
+msgstr ""
+
+#: ../plugin.py:576
+msgid "Swap is activated on USB"
+msgstr ""
+
+#: ../plugin.py:606 ../plugin.py:609 ../plugin.py:612
+msgid "System Tools"
+msgstr ""
+
+#: ../plugin.py:260
+msgid "System Tools Information Menu"
+msgstr ""
+
+#: ../plugin.py:134
+msgid "System Tools Main Menu"
+msgstr ""
+
+#: ../plugin.py:80
+msgid "SystemToolsConfig to activate some changes restart enigma"
+msgstr ""
+
+#: ../plugin.py:232
+msgid ""
+"Your Are watching FTA Channel or\n"
+" ecm.info file is missing."
+msgstr ""
+
+#: ../plugin.py:204 ../plugin.py:207 ../plugin.py:354 ../plugin.py:357
+#: ../plugin.py:583 ../plugin.py:586
+#, python-format
+msgid "start shell com: %s"
+msgstr ""
diff -ruN a/setup.py b/setup.py
--- a/setup.py	2023-09-23 10:06:17.858253668 +0300
+++ b/setup.py	2023-09-23 12:34:25.903216431 +0300
@@ -1,10 +1,12 @@
-from distutils.core import setup, Extension
+from distutils.core import setup
+import setup_translate
 
 pkg = 'Extensions.SystemTools'
 setup (name = 'enigma2-plugin-extensions-systemtools',
        version = '0.7',
-       description = 'SystemTools for enigma2 stb',
+       description = 'system tools for enigma2',
        packages = [pkg],
        package_dir = {pkg: 'plugin'},
        package_data = {pkg: ['memorysimple.sh', 'maintainer.info']},
+       cmdclass = setup_translate.cmdclass, # for translation
       )
diff -ruN a/setup_translate.py b/setup_translate.py
--- a/setup_translate.py	1970-01-01 03:00:00.000000000 +0300
+++ b/setup_translate.py	2023-09-23 12:42:09.618713291 +0300
@@ -0,0 +1,51 @@
+
+# Language extension for distutils Python scripts. Based on this concept:
+# http://wiki.maemo.org/Internationalize_a_Python_application
+from distutils import cmd
+from distutils.command.build import build as _build
+import glob
+import os
+
+
+class build_trans(cmd.Command):
+	description = 'Compile .po files into .mo files'
+
+	def initialize_options(self):
+		pass
+
+	def finalize_options(self):
+		pass
+
+	def run(self):
+		s = os.path.join('po')
+		lang_domains = glob.glob(os.path.join(s, '*.pot'))
+		if len(lang_domains):
+			for lang in os.listdir(s):
+				if lang.endswith('.po'):
+					plugin = os.path.join(s, lang)
+					lang = lang[:-3]
+					destdir = os.path.join('build', 'lib', 'Extensions',
+						'SystemTools', 'locale', lang, 'LC_MESSAGES')
+					if not os.path.exists(destdir):
+						os.makedirs(destdir)
+					for lang_domain in lang_domains:
+						lang_domain = lang_domain.rsplit('/', 1)[1]
+						dest = os.path.join(destdir, lang_domain[:-3] + 'mo')
+						print("Language compile %s -> %s" % (plugin, dest))
+						if os.system("msgfmt '%s' -o '%s'" % (plugin, dest)) != 0:
+							raise Exception("Failed to compile: " + plugin)
+		else:
+			print("we got no domain -> no translation was compiled")
+
+
+class build(_build):
+	sub_commands = _build.sub_commands + [('build_trans', None)]
+
+	def run(self):
+		_build.run(self)
+
+
+cmdclass = {
+	'build': build,
+	'build_trans': build_trans,
+}
